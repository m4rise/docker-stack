version: '3.9'

networks:
  traefik:
    external:
      name: traefik

services:

  webserver:
    build:
      context: ./bin/webserver
      args:
        - USER_HOSTMACHINE_UID=${USER_HOSTMACHINE_UID:-1000}
        - USER_HOSTMACHINE_GID=${USER_HOSTMACHINE_GID:-1000}
        - USER_NAME=${USER_NAME:-damien}
    container_name: webserver
    restart: always
    depends_on:
      - mysql
    volumes:
      - ${DOCUMENT_ROOT:-../../www}:/var/www
      - ${CERTS_DIR:-../certs}:/etc/apache2/certs:ro
      - ${PHP_INI:-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR:-./config/vhosts}:/etc/apache2/sites-enabled
      - ${APACHE_LOG_DIR:-./logs/apache2}:/var/log/apache2
    labels:
      traefik.enable: true
#      # HTTP
#      traefik.http.routers.www.rule: "Host(${PROJECTS_URLS:-`localhost`})"
#      traefik.http.routers.www.entrypoints: "web"
#      # Redirects HTTP to HTTPS
#      traefik.http.routers.www.middlewares: "redirect-to-https@file"
      # HTTPS
      traefik.http.routers.www_https.rule: Host(${PROJECTS_URLS:-`localhost`})
      traefik.http.routers.www_https.entrypoints: websecure
      traefik.http.routers.www_https.tls: true
      traefik.http.routers.www_https.middlewares: "for-dev@file"
    networks:
      - traefik

  mysql:
    build:
      context: ./bin/db/${DATABASE:-mysql8}
    container_name: mysql
    restart: always
    volumes:
      - ${MYSQL_DATA_DIR:-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR:-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_HOST: ${DBS_ROOT_NAME:-root}
      MYSQL_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
    labels:
      traefik.enable: false
    networks:
      - traefik

#  mongo:
#    image: mongo
#    container_name: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${DBS_ROOT_NAME:-root}
#      MONGO_INITDB_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD}
#    volumes:
#      - ${MONGO_DATA_DIR:-./data/mongo}:/data/db
#    labels:
#      traefik.enable: false
#    networks:
#      - traefik

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/logs", "-c", "log_filename=postgresql.log", "-c", "log_statement=all"]
    volumes:
      - ${POSTGRES_DATA_DIR:-./data/postgres}:/var/lib/postgresql/data
      - ${POSTGRES_LOG_DIR:-./logs/postgres}:/logs
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
    labels:
      traefik.enable: false
    networks:
      - traefik

  node:
    image: node:lts
    container_name: node
    volumes:
      - ${DOCUMENT_ROOT:-../../www}:/var/www
    labels:
      traefik.enable: false
    networks:
      - traefik

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    labels:
      traefik.enable: false
    networks:
      - traefik
