version: '3.9'

networks:
  traefik:
    external: true

services:

#   webserver:
#     build:
#       context: ./bin/webserver
#       args:
#         - USER_HOSTMACHINE_UID=${USER_HOSTMACHINE_UID:-1000}
#         - USER_HOSTMACHINE_GID=${USER_HOSTMACHINE_GID:-1000}
#         - USER_NAME=${USER_NAME:-damien}
#     container_name: webserver
#     restart: always
#     depends_on:
#       - mysql
#     volumes:
#       - ${DOCUMENT_ROOT:-../../www}:/var/www
#       - ${CERTS_DIR:-../certs}:/etc/apache2/certs:ro
#       - ${PHP_INI:-./config/php/php.ini}:/usr/local/etc/php/php.ini
#       - ${VHOSTS_DIR:-./config/vhosts}:/etc/apache2/sites-enabled
#       - ${APACHE_LOG_DIR:-./logs/apache2}:/var/log/apache2
#     labels:
#       traefik.enable: true
# #      # HTTP
# #      traefik.http.routers.www.rule: "Host(${PROJECTS_URLS:-`localhost`})"
# #      traefik.http.routers.www.entrypoints: "web"
# #      # Redirects HTTP to HTTPS
# #      traefik.http.routers.www.middlewares: "redirect-to-https@file"
#       # HTTPS
#       traefik.http.routers.www_https.rule: Host(${PROJECTS_URLS:-`localhost`})
#       traefik.http.routers.www_https.entrypoints: websecure
#       traefik.http.routers.www_https.tls: true
#       traefik.http.routers.www_https.middlewares: "for-dev@file"
#     networks:
#       - traefik
#
#   mysql:
#     build:
#       context: ./bin/db/${DATABASE:-mysql8}
#     container_name: mysql
#     restart: always
#     volumes:
#       - ${MYSQL_DATA_DIR:-./data/mysql}:/var/lib/mysql
#       - ${MYSQL_LOG_DIR:-./logs/mysql}:/var/log/mysql
#     environment:
#       MYSQL_ROOT_HOST: ${DBS_ROOT_NAME:-root}
#       MYSQL_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
#     labels:
#       traefik.enable: false
#     networks:
#       - traefik
#
#  mongo:
#    image: mongo
#    container_name: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${DBS_ROOT_NAME:-root}
#      MONGO_INITDB_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD}
#    volumes:
#      - ${MONGO_DATA_DIR:-./data/mongo}:/data/db
#    labels:
#      traefik.enable: false
#    networks:
#      - traefik

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    volumes:
      - ${POSTGRES_DATA_DIR:-./data/postgres}:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
      POSTGRES_DB: boilerplate
    labels:
      traefik.enable: false
    networks:
      - traefik

#   node:
#     image: node:lts
#     container_name: node
#     volumes:
#       - ${DOCUMENT_ROOT:-../../www}:/var/www
#     # environment:
#     #   NODE_EXTRA_CA_CERTS: ${ROOT_CA_FILE}
#     labels:
#       traefik.enable: false
#     networks:
#       - traefik

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    labels:
      traefik.enable: false
    networks:
      - traefik

# Cache & Message Queue
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - ${ELASTICSEARCH_DATA_DIR:-./data/elasticsearch}:/usr/share/elasticsearch/data
    labels:
      traefik.enable: false
    networks:
      - traefik

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin}
    volumes:
      - ${RABBITMQ_DATA_DIR:-./data/rabbitmq}:/var/lib/rabbitmq
    labels:
      traefik.enable: true
      traefik.http.routers.rabbitmq.rule: Host(`rabbitmq.localhost`)
      traefik.http.routers.rabbitmq.entrypoints: websecure
      traefik.http.routers.rabbitmq.tls: true
      traefik.http.services.rabbitmq.loadbalancer.server.port: 15672
    networks:
      - traefik

  memcached:
    image: memcached:alpine
    container_name: memcached
    restart: always
    command: memcached -m 64
    labels:
      traefik.enable: false
    networks:
      - traefik

  # Databases alternatives
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-development}
      MYSQL_USER: ${MYSQL_USER:-developer}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-developer}
    volumes:
      - ${MARIADB_DATA_DIR:-./data/mariadb}:/var/lib/mysql
    labels:
      traefik.enable: false
    networks:
      - traefik

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DBS_ROOT_NAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${DBS_ROOT_PASSWORD:-root}
    volumes:
      - ${MONGO_DATA_DIR:-./data/mongo}:/data/db
    labels:
      traefik.enable: false
    networks:
      - traefik
